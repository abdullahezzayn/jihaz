[package]
name = "jihaz-deferred"
version = "0.1.0"
edition = "2021"

[features]
# The gtk default feature is copied from Druid's implementation.
detault = ["scraper", "gtk"]
# scraper = []
scraper = ["dep:scraper"]
# These are copied from Druid's implementation.
gtk = ["gdk-sys", "glib-sys", "gtk-sys", "gtk-rs"]
x11 = [
    "ashpd",
    "bindgen",
    "cairo-sys-rs",
    "futures",
    "nix",
    "pkg-config",
    "x11rb",
]
wayland = [
    "wayland-client",
    "wayland-protocols/client",
    "wayland-protocols/unstable_protocols",
    "nix",
    "cairo-sys-rs",
    "rand",
    "calloop",
    "wayland-cursor",
    "log",
    "im",
    "bindgen",
    "pkg-config",
]
xilem = ["dep:xilem", "dep:xilem_core"]

[dependencies]
jihaz-macros  = { workspace = true }
jihaz-primal  = { workspace = true }
serde         = { workspace = true }
tracing       = { workspace = true }
xilem         = { workspace = true, optional = true }
xilem_core    = { workspace = true, optional = true }

# scraper         = { version = "*" }
# glazier         = { git = "https://github.com/linebender/glazier", features = ["serde"] }
# svg_to_png      = { version = "0.1.0" }
anyhow          = { version = "1.0" }
bitflags        = "1.3.2"
cfg-if = "1.0.0"
chrono          = "*"
ico             = { version = "0.3.0" }
lapce-xi-rope   = { version = "0.3.2", features = ["serde"] }
lsp-types       = { version = "0.93", features = ["proposed"] }
memchr          = "2.7.1"
once_cell = "1.17.1"
parley          = { git = "https://github.com/lapce/parley" }
plist           = { version = "1.6.1" }
resvg           = { version = "0.41.0" }
scraper         = { version = "*", optional = true }
strum           = "0.21.0" # follow same version as system-deps in lockfile
strum_macros    = "0.21.1" # ditto
tauri-icns      = { version = "0.1.0" }
time            = "0.3.20"
tree-sitter     = "0.20.10"
usvg            = { version = "0.41.0" }
vello           = { version = "0.1.0" }

# These below need to be cleaned up for each OS, as well as their respective backend code,
# as we only need the clipboard api for our backends.
#
# These are copied from Druid's implementation.

[target.'cfg(target_os="windows")'.dependencies]
scopeguard = "1.1.0"
wio = "0.2.2"

[target.'cfg(target_os="windows")'.dependencies.winapi]
version = "0.3.9"
features = ["d2d1_1", "dwrite", "winbase", "libloaderapi", "errhandlingapi", "winuser",
            "shellscalingapi", "shobjidl", "combaseapi", "synchapi", "dxgi1_3", "dcomp",
            "d3d11", "dwmapi", "wincon", "fileapi", "processenv", "winbase", "handleapi",
            "shellapi", "winnls"]

[target.'cfg(target_os="macos")'.dependencies]
block = "0.1.6"
cocoa = "0.24.1"
objc = "0.2.7"
core-graphics = "0.22.3"
foreign-types = "0.3.2"
bitflags = "1.3.2"

[target.'cfg(any(target_os = "freebsd", target_os="linux", target_os="openbsd"))'.dependencies]
ashpd = { version = "0.3.2", optional = true }
# TODO(x11/dependencies): only use feature "xcb" if using X11
cairo-rs = { version = "0.16.7", default-features = false, features = ["xcb"] }
cairo-sys-rs = { version = "0.16.3", default-features = false, optional = true }
futures = { version = "0.3.26", optional = true, features = ["executor"]}
gdk-sys = { version = "0.16.0", optional = true }
# `gtk` gets renamed to `gtk-rs` so that we can use `gtk` as the feature name.
gtk-rs = { version = "0.16.2", package = "gtk", optional = true }
glib-sys = { version = "0.16.3", optional = true }
gtk-sys = { version = "0.16.0", optional = true }
nix = { version = "0.24.3", optional = true }
x11rb = { version = "0.10.1", features = ["allow-unsafe-code", "present", "render", "randr", "xfixes", "xkb", "resource_manager", "cursor"], optional = true }
wayland-client = { version = "0.29.5", optional = true }
wayland-protocols = { version = "0.29.5", optional = true }
wayland-cursor = { version = "0.29.5", optional = true }
rand = { version = "0.8.5", optional = true }
calloop = { version = "0.7.2", optional = true }
log = { version = "0.4.17", optional = true }
im = { version = "15.1.0", optional = true }

[target.'cfg(target_arch="wasm32")'.dependencies]
wasm-bindgen = "0.2.84"
js-sys = "0.3.61"

[target.'cfg(target_arch="wasm32")'.dependencies.web-sys]
version = "0.3.61"
features = ["Window", "MouseEvent", "CssStyleDeclaration", "WheelEvent", "KeyEvent", "KeyboardEvent", "Navigator"]

[build-dependencies]
bindgen = { version = "0.61.0", optional = true }
pkg-config = { version = "0.3.26", optional = true }